*** Settings ***
Resource          variables.txt

*** Keywords ***
Connect AE
    Action Connect    ${_AE_HOST}    ${_AE_PORT}    ${_AE_USER}    ${_AE_PASS}    ${_AE_TEMP_FOLD}

Set Overwrite Agent
    Run Keyword If    '${ENV}' == 'WIN'    Set Overwrite Agent WIN
    Run Keyword If    '${ENV}' == 'UNIX'    Set Overwrite Agent UNIX
    Run Keyword If    '${ENV}' == 'RA'    Set Overwrite RA Agent

Set Overwrite Agent WIN
    Action Set    &AGENT#    ${_PROMPTSET_AGENT_WIN}
    Action Set    &LOGIN#    ${_PROMPTSET_LOGIN_WIN}

Set Overwrite Agent UNIX
    Action Set    &AGENT#    ${_PROMPTSET_AGENT_UNIX}
    Action Set    &LOGIN#    ${_PROMPTSET_LOGIN_UNIX}

Set Overwrite RA Agent
    Action Set    &OVERWRITE_RA_AGENT_PROMPT#    ${_PROMPTSET_RA_AGENT}

Action Report Should Contain
    [Arguments]    ${text}
    ${report} =    Action Get Report
    Should Contain    ${report}    ${text}

Action Report Should Be Found
    ${report} =    Action Get Report
    Should Not Be Empty    ${report}

Action Report Should Not Be Found
    ${report} =    Action Get Report
    Should Be Empty    ${report}

Action Return Code Should Be
    [Arguments]    ${code}
    ${returnCode}=    Action Get Variable    Return code
    Should Be Equal    ${returnCode}    ${code}

Action Return Code Should Not Equal
    [Arguments]    ${code}
    ${returnCode}=    Action Get Variable    Return code
    Should Not Be Equal    ${returnCode}    ${code}

Assert Equal
    [Arguments]    ${ExpectedValue}    ${ActualValue}
    ${ExpectedVal}=    Action Get Variable    ${ExpectedValue}
    Should Be Equal    ${ExpectedVal}    ${ActualValue}

Assert Not Equal
    [Arguments]    ${ExpectedValue}    ${ActualValue}
    ${ExpectedVal}=    Action Get Variable    ${ExpectedValue}
    Should Not Be Equal    ${ExpectedVal}    ${ActualValue}

Action Return Status Should Be
    [Arguments]    ${status}
    ${returnStatus}=    Action Get Variable    Status
    Should Be Equal    ${returnStatus}    ${status}

Action Return Status Should Not Be
    [Arguments]    ${status}
    ${returnStatus}=    Action Get Variable    Status
    Should Not Be Equal    ${returnStatus}    ${status}

Action Object Variable File Path Should Be
    [Arguments]    ${Variable_Name}    ${File_name}
    ${File_path}=    Action Get Variable    ${Variable_Name}
    Should Contain    ${File_path}    ${File_name}
    Set Global Variable    ${File_path}

Action Object Variable Count Value Should Be
    [Arguments]    ${Variable_Name}
    ${Count_Value}=    Action Get Variable    ${Variable_Name}
    Should Be True    ${Count_Value} >= 0

Action Object Variable Maximunm Result Should Be
    [Arguments]    ${Variable_Name}
    ${Count_Value}=    Action Get Variable    ${Variable_Name}
    Should Be True    ${Maximum_result} >= 0

Action Object Variable Should Be Found
    [Arguments]    ${Object_Variable}
    ${objectVariable}=    Action Get Variable    ${Object_Variable}
    Should Not Be Empty    ${objectVariable}
    Set Global Variable    ${objectVariable}

Action Object Variable Should Not Be Found
    [Arguments]    ${Object_Variable}
    ${objectVariable}=    Action Get Variable    ${Object_Variable}
    Should Be Empty    ${objectVariable}

Assert Success
    Action Report Should Be Found
    Action Return Status Should Be    ${ENDED_OK}
    Action Return Code Should Be    ${RETURN_CODE_SUCCESS}

Assert Failure
    ${report} =    Action Get Report
    ${length} =    Get Length    ${report}
    Action Return Status Should Not Be    ${ENDED_OK}
    Action Return Code Should Not Equal    ${RETURN_CODE_SUCCESS}

Set ID Global
    [Arguments]    ${Object_Variable}
    ${ID}=    Action Get Variable    ${Object_Variable}
    Should Not Be Empty    ${ID}
    Set Global Variable    ${ID}

Generate Number
    ${Generated_Number}    Generate Random String    8    [NUMBERS]
    Set Global Variable    ${Generated_Number}

Generate String
    ${Generated_Name}    Generate Random String    8    [LETTERS]
    ${Time}    Get Time
    Set Global Variable    ${Generated_Name}
    Set Global Variable    ${Time}

Init Action
    [Arguments]    ${actionName}
    Action Create    ${actionName}
    Set Overwrite Agent

Connect to Acronis
    Action Set    &UC4RB_AC_ENDPOINT#    ${Acronis_URL}
    Action Set    &UC4RB_AC_API_VERSION#    ${Acronis_Version}
    Action Set    &UC4RB_AC_USERNAME#    ${Acronis_Username}
    Action Set    &UC4RB_AC_PASSWORD#    ${Acronis_Password}

Create Tenant
    [Arguments]    ${CREATE_TENANT_ACTION}    ${TenantName}    ${ParentTenantID}    ${Type}    ${Email}    ${FirstName}
    ...    ${LastName}
    Init Action    ${CREATE_TENANT_ACTION}
    Connect to Acronis
    Action Set    &UC4RB_AC_TENANT_NAME#    ${TenantName}
    Action Set    &UC4RB_AC_PARENT_ID#    ${ParentTenantID}
    Action Set    &UC4RB_AC_TENANT_KIND#    ${Type}
    Action Set    &UC4RB_AC_EMAIL#    ${Email}
    Action Set    &UC4RB_AC_FIRST_NAME#    ${FirstName}
    Action Set    &UC4RB_AC_LAST_NAME#    ${LastName}
    Action Execute
    ${Gen_Tenant_ID}=    Action Get Variable    &UC4RB_AC_TENANT_ID#
    Set Global Variable    ${Gen_Tenant_ID}
    ${Gen_Tenant_Version}=    Action Get Variable    &UC4RB_AC_TENANT_VERSION#
    Set Global Variable    ${Gen_Tenant_Version}

Delete Tenant
    [Arguments]    ${DELETE_TENANT_ACTION}    ${TenantID}    ${FailIfNonExisting}
    Init Action    ${DELETE_TENANT_ACTION}
    Connect to Acronis
    Action Set    &UC4RB_AC_TENANT_ID#    ${TenantID}
    Action Set    &UC4RB_AC_FAIL#    ${FailIfNonExisting}
    Action Execute

Create User
    [Arguments]    ${CREATE_USER_ACTION}    ${TenantID}    ${Login}    ${Email}    ${FirstName}    ${LastName}
    Init Action    ${CREATE_USER_ACTION}
    Connect to Acronis
    Action Set    &UC4RB_AC_TENANT_ID#    ${TenantID}
    Action Set    &UC4RB_AC_USER_LOGIN#    ${Login}
    Action Set    &UC4RB_AC_USER_EMAIL#    ${Email}
    Action Set    &UC4RB_AC_USER_FIRST_NAME#    ${FirstName}
    Action Set    &UC4RB_AC_USER_LAST_NAME#    ${LastName}
    Action Execute
    ${Gen_UserID}=    Action Get Variable    &UC4RB_AC_USER_ID#
    Set Global Variable    ${Gen_UserID}

Delete User
    [Arguments]    ${DELETE_USER_ACTION}    ${UserID}    ${FailIfNonExisting}
    Init Action    ${DELETE_USER_ACTION}
    Connect to Acronis
    Action Set    &UC4RB_AC_USER_ID#    ${UserID}
    Action Set    &UC4RB_AC_FAIL#    ${FailIfNonExisting}
    Action Execute

Create Client
    [Arguments]    ${CREATE_CLIENT_ACTION}    ${ClientName}    ${ParentTenantID}
    Init Action    ${CREATE_CLIENT_ACTION}
    Connect to Acronis
    Action Set    &UC4RB_AC_CLIENT_NAME#    ${ClientName}
    Action Set    &UC4RB_AC_PARENT_ID#    ${ParentTenantID}
    Action Execute
    ${Gen_ClientID}=    Action Get Variable    &UC4RB_AC_CLIENT_ID#
    Set Global Variable    ${Gen_ClientID}
    ${Gen_ClientSecret}=    Action Get Variable    &UC4RB_AC_CLIENT_SECRET#
    Set Global Variable    ${Gen_ClientSecret}

Connect to Acronis using Token
    Action Set    &UC4RB_AC_ENDPOINT#    ${Acronis_URL}
    Action Set    &UC4RB_AC_API_VERSION#    ${Acronis_Version}
    Action Set    &UC4RB_AC_CLIENT_ID#    ${Gen_ClientID}
    Action Set    &UC4RB_AC_CLIENT_SECRET#    ${Gen_ClientSecret}

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.automic.actions</groupId>
	<artifactId>acronis-tool</artifactId>
	<version>1.0.0</version>
	<url>http://www.broadcom.com</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>5.4.2</junit.version>
		<vendor>Automic Software GmbH</vendor>
		<version>1.3.1</version>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.broadcom</groupId>
			<artifactId>action-pack-sdk</artifactId>
			<version>1.1.0</version>
			<exclusions>
			        <exclusion>  
			          <groupId>javax.xml.bind</groupId>
			          <artifactId>jaxb-api</artifactId>
			        </exclusion>
        <exclusion>  
			          <groupId>com.google.guava</groupId>
			          <artifactId>guava</artifactId>
			        </exclusion>
        <exclusion>  
			          <groupId>org.eclipse.persistence</groupId>
			          <artifactId>org.eclipse.persistence.moxy</artifactId>
			        </exclusion>			        
      </exclusions> 
			
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.19.4</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.1.4</version>
		</dependency>
		<dependency>
			<groupId>com.owlike</groupId>
			<artifactId>genson</artifactId>
			<version>0.99</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>1.5.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			 <plugin>
			      <artifactId>maven-compiler-plugin</artifactId>
			      <version>3.8.1</version>
			      <configuration>
					<source>1.8</source>
					<target>1.8</target>
			      </configuration>
			 </plugin>
				
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-jar-plugin</artifactId>
			    <version>3.2.0</version>
			    <configuration>
				<archive>
					<manifest>
						<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
					</manifest>
				</archive>
			    </configuration>
			</plugin>
			
			
		        <plugin>
			     <groupId>org.apache.maven.plugins</groupId>
			     <artifactId>maven-shade-plugin</artifactId>
			     <version>2.4</version>
			     <executions>
			           <execution>
			           <id>orig</id>
				   	<phase>package</phase>
					<goals>
					     <goal>shade</goal>
					</goals>
					<configuration>
					<!--<artifactSet>
					      <excludes>
					          <exclude>org.eclipse.persistence:*</exclude>
					          <exclude>com.google.guava:*</exclude>
					          <exclude>javax.xml.bind:*</exclude>					          
					      </excludes>
              				</artifactSet>
					-->
					     <createDependencyReducedPom>false</createDependencyReducedPom>
					     <transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<Main-Class>com.broadcom.apdk.cli.CLI</Main-Class>
							</manifestEntries>
						</transformer>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
					     </transformers>
					</configuration>
				   </execution>
			     </executions>
			</plugin>
    


                        <plugin>
			       <artifactId>maven-assembly-plugin</artifactId>
			       <executions>
				    <execution>
					<id>make-clm-zip</id>
					<phase>package</phase>
					<goals>
					     <goal>single</goal>
					</goals>
					<configuration>
					        <finalName>${project.build.finalName}</finalName>
						<descriptors>
							<descriptor>clm-libs-assembly.xml</descriptor>
						</descriptors>
					</configuration>
				    </execution> 
			       </executions>
			</plugin>

			<plugin>			
			     <groupId>org.apache.maven.plugins</groupId>
			     <artifactId>maven-surefire-plugin</artifactId>
			     <version>3.0.0-M4</version>
			</plugin>
			
	
			<!-- OPTIONAL: Deletes the initially created JAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				
	<dependencies>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>28.2-jre</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
			<version>2.7.5</version>
		</dependency>
        </dependencies>				
			
				<executions>
					<execution>
					  <id>antrn</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
							         <property name="plugin_classpath" refid="maven.plugin.classpath"/>
		<property name="antProperty" value="${project.build.directory}"/>
                                <echo message="Custom Ant Property is: ${antProperty}"/>
		<delete
									file="${project.build.directory}/original-${project.build.finalName}.jar" />
								<delete	
									file="${project.build.directory}/${project.build.finalName}-shaded.jar" />
									
                <path id="temp.path">
		  <path refid="maven.plugin.classpath"/>
		  <fileset dir="${antProperty}">
		    <include name="*.jar"/>
		  </fileset>
</path>
		<java classname="com.broadcom.apdk.cli.CLI" fork="true" failonerror="true">
     <arg value="-e"/>
     <!-- reference to the passed-in classpath reference -->
     <classpath refid="temp.path"/>
 </java>						
								
					
								
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			

			
			<!-- OPTIONAL: Runs the created JAR file and exports the action pack -->
<!--			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				
<dependencies>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>28.2-jre</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
			<version>2.7.5</version>
		</dependency>
        </dependencies>				
				
				<executions>
					<execution>
					<id>default-cli</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
						   <includeProjectDependencies>false</includeProjectDependencies>
          					<includePluginDependencies>true</includePluginDependencies>
          				
          					
							<executable>java</executable>
							<workingDirectory>${project.build.directory}</workingDirectory>
							<arguments>
							<argument>${maven.plugin.classpath}</argument>
							<argument>com.broadcom.apdk.cli.CLI</argument>
								<argument>-jar</argument>
								<argument>acro-tool-tmp.jar</argument> 
								<argument>-e</argument>								
							</arguments>
						</configuration>
						
					</execution>
				</executions>
			</plugin> -->



			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.5</version>
				<extensions>true</extensions>
				<configuration>
					<!-- The server "id" element from settings to use authentication from -->
					<serverId>com.automic.nexusvie</serverId>
					<!-- The Base URL of Nexus instance where we want to stage -->
					<nexusUrl>https://nexusvie.automic.com/nexus</nexusUrl>
					<stagingProfileId>1288804a555f44</stagingProfileId>
					<!-- do NOT auto release after close as we need to retrieve CLM base 
						url as long the staged repo exists -->
					<!-- explicit release step in build script required (outside of POM) -->
					<!-- <autoReleaseAfterClose>true</autoReleaseAfterClose> -->
					<!-- staging will remain open to publish the full action pack bundle 
						into the repository -->
					<!-- beaware: staging repository needs to be closed within the buildsteps -->
					<skipStagingRepositoryClose>true</skipStagingRepositoryClose>
					<!-- will keep the deployed artifact even in case of errors for further 
						debugging -->
					<keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>